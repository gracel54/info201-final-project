filter(`GDP - real growth rate(%)` != "") %>%
filter(`Internet hosts` != "") %>%
filter(`Internet users` != "") %>%
filter(`Telephones - main lines in use` != "") %>%
filter(`Telephones - mobile cellular` != "")
## here we rank the countries based on multiple aspects
new_data <- data %>%
mutate(elec_gap = as.numeric(as.character(`Electricity - production(kWh)`))- as.numeric(as.character(`Electricity - consumption(kWh)`))) %>%
arrange(desc(elec_gap)) %>%
mutate(ele_rank = 1:nrow(new_data)) %>% ## ele_rank: rank from highest [electrivity production - consumption] downwards
mutate(gdp = as.numeric(as.character(`GDP - per capita`)) * as.numeric(as.character(`GDP - real growth rate(%)`))) %>%
arrange(desc(gdp)) %>%
mutate(gdp_rank = 1:nrow(new_data)) %>% ## gdp_rank: rank from highest gdp per cap * growth rate downwards
mutate(net_ratio = as.numeric(as.character(`Internet hosts`)) / as.numeric(as.character(`Internet users`))) %>%
arrange(desc(net_ratio)) %>%
mutate(net_rank = 1:nrow(new_data)) %>% ## net_rank: rank from highest internet host per user downwards
mutate(phone_ratio = as.numeric(as.character(`Telephones - mobile cellular`)) / as.numeric(as.character(`Telephones - main lines in use`))) %>%
arrange(phone_ratio) %>%
mutate(phone_rank = 1:nrow(new_data)) ## phone_rank: rank from lowest cellular phone usage compare to mainline upwards
## this function is what you call in future documents, after sourcing this file.
## calling this will give you 10 rows of data, with first 9 columns same with ^ in data's comments,
## -- but added elec_gap, elec_rank, gdp, gdp_rank, net_ratio, net_rank, phone_ratio and phone_rank.
## they are arranged in the order(from top to bottom) with most possibility of growth to least possibility of growth
get_10_countries <- function(){
result_data <- new_data %>%
mutate(sum_rank = ele_rank + gdp_rank + net_rank + phone_rank) %>%
arrange(sum_rank) %>%
head(10)
result_data
}
yeet <- get_10_countries()
new_data <- data %>%
mutate(elec_gap = as.numeric(as.character(`Electricity - production(kWh)`))- as.numeric(as.character(`Electricity - consumption(kWh)`))) %>%
arrange(desc(elec_gap)) %>%
mutate(ele_rank = 1:nrow(new_data)) %>% ## ele_rank: rank from highest [electrivity production - consumption] downwards
mutate(gdp = as.numeric(as.character(`GDP - per capita`)) * as.numeric(as.character(`GDP - real growth rate(%)`))) %>%
arrange(desc(gdp)) %>%
mutate(gdp_rank = 1:nrow(new_data)) %>% ## gdp_rank: rank from highest gdp per cap * growth rate downwards
mutate(net_ratio = as.numeric(as.character(`Internet hosts`)) / as.numeric(as.character(`Internet users`))) %>%
arrange(desc(net_ratio)) %>%
mutate(net_rank = 1:nrow(new_data)) %>% ## net_rank: rank from highest internet host per user downwards
mutate(phone_ratio = as.numeric(as.character(`Telephones - mobile cellular`)) / as.numeric(as.character(`Telephones - main lines in use`))) %>%
arrange(phone_ratio) %>%
mutate(phone_rank = 1:nrow(new_data)) ## phone_rank: rank from lowest cellular phone usage compare to mainline upwards
## here we rank the countries based on multiple aspects
new_data <- data %>%
mutate(elec_gap = as.numeric(as.character(`Electricity - production(kWh)`))- as.numeric(as.character(`Electricity - consumption(kWh)`))) %>%
arrange(desc(elec_gap)) %>%
mutate(ele_rank = 1:nrow(new_data)) %>% ## ele_rank: rank from highest [electrivity production - consumption] downwards
mutate(gdp = as.numeric(as.character(`GDP - per capita`)) * as.numeric(as.character(`GDP - real growth rate(%)`))) %>%
arrange(desc(gdp)) %>%
mutate(gdp_rank = 1:nrow(new_data)) %>% ## gdp_rank: rank from highest gdp per cap * growth rate downwards
mutate(net_ratio = as.numeric(as.character(`Internet hosts`)) / as.numeric(as.character(`Internet users`))) %>%
arrange(desc(net_ratio)) %>%
mutate(net_rank = 1:nrow(new_data)) %>% ## net_rank: rank from highest internet host per user downwards
mutate(phone_ratio = as.numeric(as.character(`Telephones - mobile cellular`)) / as.numeric(as.character(`Telephones - main lines in use`))) %>%
arrange(phone_ratio) %>%
mutate(phone_rank = 1:nrow(new_data)) ## phone_rank: rank from lowest cellular phone usage compare to mainline upwards
## here we rank the countries based on multiple aspects
new_data <- data %>%
mutate(elec_gap = as.numeric(as.character(`Electricity - production(kWh)`))- as.numeric(as.character(`Electricity - consumption(kWh)`))) %>%
arrange(desc(elec_gap)) %>%
mutate(ele_rank = 1:nrow(data)) %>% ## ele_rank: rank from highest [electrivity production - consumption] downwards
mutate(gdp = as.numeric(as.character(`GDP - per capita`)) * as.numeric(as.character(`GDP - real growth rate(%)`))) %>%
arrange(desc(gdp)) %>%
mutate(gdp_rank = 1:nrow(data)) %>% ## gdp_rank: rank from highest gdp per cap * growth rate downwards
mutate(net_ratio = as.numeric(as.character(`Internet hosts`)) / as.numeric(as.character(`Internet users`))) %>%
arrange(desc(net_ratio)) %>%
mutate(net_rank = 1:nrow(data)) %>% ## net_rank: rank from highest internet host per user downwards
mutate(phone_ratio = as.numeric(as.character(`Telephones - mobile cellular`)) / as.numeric(as.character(`Telephones - main lines in use`))) %>%
arrange(phone_ratio) %>%
mutate(phone_rank = 1:nrow(data)) ## phone_rank: rank from lowest cellular phone usage compare to mainline upwards
library(dplyr)
library(data.table)
raw_data <- data.table::fread("countries.csv")
## select only columns we are interested in, and delete all the blank data
## "data" is now data table of 9columns: country, e cons + pro, gdp per cap + growth, internet hosts + users, telephone line + cellular
data <- raw_data %>%
filter(Country != "String") %>%
select(Country, `Electricity - consumption(kWh)`, `Electricity - production(kWh)`, `GDP - per capita`, `GDP - real growth rate(%)`, `Internet hosts`, `Internet users`, `Telephones - main lines in use`, `Telephones - mobile cellular`) %>%
filter(`Electricity - consumption(kWh)` != "") %>%
filter(`Electricity - production(kWh)` != "") %>%
filter(`GDP - per capita` != "") %>%
filter(`GDP - real growth rate(%)` != "") %>%
filter(`Internet hosts` != "") %>%
filter(`Internet users` != "") %>%
filter(`Telephones - main lines in use` != "") %>%
filter(`Telephones - mobile cellular` != "")
## here we rank the countries based on multiple aspects
new_data <- data %>%
mutate(elec_gap = as.numeric(as.character(`Electricity - production(kWh)`))- as.numeric(as.character(`Electricity - consumption(kWh)`))) %>%
arrange(desc(elec_gap)) %>%
mutate(ele_rank = 1:nrow(data)) %>% ## ele_rank: rank from highest [electrivity production - consumption] downwards
mutate(gdp = as.numeric(as.character(`GDP - per capita`)) * as.numeric(as.character(`GDP - real growth rate(%)`))) %>%
arrange(desc(gdp)) %>%
mutate(gdp_rank = 1:nrow(data)) %>% ## gdp_rank: rank from highest gdp per cap * growth rate downwards
mutate(net_ratio = as.numeric(as.character(`Internet hosts`)) / as.numeric(as.character(`Internet users`))) %>%
arrange(desc(net_ratio)) %>%
mutate(net_rank = 1:nrow(data)) %>% ## net_rank: rank from highest internet host per user downwards
mutate(phone_ratio = as.numeric(as.character(`Telephones - mobile cellular`)) / as.numeric(as.character(`Telephones - main lines in use`))) %>%
arrange(phone_ratio) %>%
mutate(phone_rank = 1:nrow(data)) ## phone_rank: rank from lowest cellular phone usage compare to mainline upwards
## this function is what you call in future documents, after sourcing this file.
## calling this will give you 10 rows of data, with first 9 columns same with ^ in data's comments,
## -- but added elec_gap, elec_rank, gdp, gdp_rank, net_ratio, net_rank, phone_ratio and phone_rank.
## they are arranged in the order(from top to bottom) with most possibility of growth to least possibility of growth
get_10_countries <- function(){
result_data <- new_data %>%
mutate(sum_rank = ele_rank + gdp_rank + net_rank + phone_rank) %>%
arrange(sum_rank) %>%
head(10)
result_data
}
yeet <- get_10_countries()
View(yeet)
# Function that makes a list about the data and returns it
library(dplyr)
out_list <- function(dataset) {
data <- list()
# Function that makes a list about the data and returns it
library(dplyr)
out_list <- function(new_data) {
data <- list()
# number of the UFO FOUND
data$total <- nrow(dataset)
data$total
# Countries have most internet hosts countries
data$popular_internet_hosts <- dataset %>%
group_by(internet
hosts
) %>%
summarize(
num_each = n()
) %>%
filter(num_each == max(num_each)) %>%
select(internet
hosts ) %>%
pull()
data$popular_internet_hosts <- dataset %>%
group_by(internet hosts
) %>%
summarize(
num_each = n()
) %>%
filter(num_each == max(num_each)) %>%
select(internet hosts ) %>%
pull()
# Countries have most internet hosts countries
data$popular_internet_hosts <- dataset %>%
group_by(elec_gap
) %>%
summarize(
num_each = n()
) %>%
filter(num_each == max(num_each)) %>%
select(elec_gap ) %>%
pull()
data$popular_internet_hosts <- new_data %>%
group_by(elec_gap
) %>%
summarize(
num_each = n()
) %>%
filter(num_each == max(num_each)) %>%
select(elec_gap ) %>%
pull()
data$most_elec_gap <- new_data %>%
group_by(elec_gap
) %>%
summarize(
num_each = n()
) %>%
filter(num_each == max(num_each)) %>%
select(elec_gap ) %>%
pull()
view(yeet)
View(yeet)
View(yeet)
# Function that makes a list about the data and returns it
library(dplyr)
out_list <- function(new_data) {
data <- list()
# Number of the Country FOUND
data$total <- nrow(new_data)
View(data$total)
The most popular UFO state is `r intro_info$data$total`.
data$total <- nrow(new_data)
data$num_country <- nrow(new_data)
view(data)
# Function that makes a list about the data and returns it
library(dplyr)
out_list <- function(df) {
data <- list()
# Number of the Country FOUND
data$num_country <- nrow(df)
# ctricity consumption and production columns
}
out_list(new_data)
View(data)
# Function that makes a list about the data and returns it
library(dplyr)
out_list <- function(df) {
out <- list()
# Number of the Country FOUND
out$num_country <- nrow(df)
# ctricity consumption and production columns
}
out_list(new_data)
View(out)
# Function that makes a list about the data and returns it
library(dplyr)
out_list <- function(df) {
output <- list()
# Number of the Country FOUND
output$num_country <- nrow(df)
output
# ctricity consumption and production columns
}
out_list(new_data)
View(new_data)
out_list(yeet)
# Function that makes a list about the data and returns it
library(dplyr)
out_list <- function(df) {
output <- list()
# Number of the Country FOUND
output$num_country <- nrow(df)
# ctricity consumption and production columns
}
out_list(yeet)
output
output$popular_iuser <- df %>%
group_by(internet user
) %>%
summarize(
num_each = n()
) %>%
filter(num_each == max(num_each)) %>%
select(S) %>%
pull()
output$popular_iuser <- df %>%
group_by(internet users
) %>%
summarize(
num_each = n()
) %>%
filter(num_each == max(num_each)) %>%
select(S) %>%
pull()
output$popular_iuser <- df %>%
group_by(internet users
) %>%
summarize(
num_each = n()
) %>%
filter(num_each == max(num_each)) %>%
select(S) %>%
pull()
output$popular_iuser <- df %>%
group_by(internet users
) %>%
summarize(
num_each = n()
) %>%
filter(num_each == max(num_each)) %>%
select(S) %>%
pull()
output$popular_iuser <- df %>%
group_by(internet users
) %>%
summarize(
num_each = n()
) %>%
filter(num_each == max(num_each)) %>%
select(S) %>%
pull()
# The Popular internet user contry
output$popular_iuser <- df %>%
group_by(Internet users
) %>%
summarize(
num_each = n()
) %>%
filter(num_each == max(num_each)) %>%
select(S) %>%
pull()
aggdata <-  aggregate(elec_gap$change,
by = list(country = elec_gap$Country),
FUN = mean)
highest_gap <- aggdata[aggdata$x == max(aggdata$x), "Country"]
output
}
egap <-  aggregate(elec_gap$change,
by = list(country = elec_gap$Country),
FUN = mean)
highest_gap <- aggdata[aggdata$x == max(aggdata$x), "Country"]
output
}
yeet[1]
yeet["Country"]
yeet$Country
yeet$`Internet users` == max(yeet$`Internet users`)
yeet$Country[1]
yeet$Country[yeet$`Internet users` == max(yeet$`Internet users`)]
yeet$`Internet users` == max(yeet$`Internet users`)
max(yeet$`Internet users`)
yeet$`Internet users`
max(yeet$`Internet users`)
min(yeet$`Internet users`)
max(1,2,3,4)
min(1,2,3,4)
max(yeet$`Internet users`)
max(yeet["Internet users"])
yeet$`Internet users`
max(yeet$`Internet users`)
max(yeet$`Internet hosts`)
max(12,9)
View(data)
View(data)
max(as.numeric(yeet$`Internet users`))
as.numeric(yeet$`Internet users`) == max(as.numeric(yeet$`Internet users`))
yeet$Country[as.numeric(yeet$`Internet users`) == max(as.numeric(yeet$`Internet users`))]
as.numeric(yeet$`GDP - real growth rate(%)`) > mean(as.numeric(yeet$`GDP - real growth rate(%)`))
as.numeric(yeet$`GDP - real growth rate(%)`) > mean(as.numeric(yeet$`GDP - real growth rate(%)`)) &&
as.numeric(yeet$`Internet users`) < mean(as.numeric(yeet$`Internet users`))
as.numeric(yeet$`GDP - real growth rate(%)`) > mean(as.numeric(yeet$`GDP - real growth rate(%)`)) &&
+ as.numeric(yeet$`Internet users`) < mean(as.numeric(yeet$`Internet users`))
as.numeric(yeet$`Internet users`) < mean(as.numeric(yeet$`Internet users`))
yeet$Countryas.numeric(yeet$`GDP - real growth rate(%)`) > mean(as.numeric(yeet$`GDP - real growth rate(%)`)) && as.numeric(yeet$`Internet users`) < mean(as.numeric(yeet$`Internet users`))
yeet$Country[as.numeric(yeet$`GDP - real growth rate(%)`) > mean(as.numeric(yeet$`GDP - real growth rate(%)`)) && as.numeric(yeet$`Internet users`) < mean(as.numeric(yeet$`Internet users`))]
yeet$Country[as.numeric(yeet$`GDP - real growth rate(%)`) > mean(as.numeric(yeet$`GDP - real growth rate(%)`))]
yeet$Country[as.numeric(yeet$`Internet users`) < mean(as.numeric(yeet$`Internet users`))]
yeet$Country[as.numeric(yeet$`GDP - real growth rate(%)`) > mean(as.numeric(yeet$`GDP - real growth rate(%)`)) & as.numeric(yeet$`Internet users`) < mean(as.numeric(yeet$`Internet users`))]
as.numeric(yeet$`Electricity - production(kWh)`) - as.numeric(yeet$`Electricity - consumption(kWh)`) == max(as.numeric(yeet$`Electricity - production(kWh)`) - as.numeric(yeet$`Electricity - consumption(kWh)`))
yeet$Country[as.numeric(yeet$`Electricity - production(kWh)`) - as.numeric(yeet$`Electricity - consumption(kWh)`) == max(as.numeric(yeet$`Electricity - production(kWh)`) - as.numeric(yeet$`Electricity - consumption(kWh)`))]
as.numeric(yeet$`Electricity - production(kWh)`) - as.numeric(yeet$`Electricity - consumption(kWh)`) > mean(as.numeric(yeet$`Electricity - production(kWh)`) - as.numeric(yeet$`Electricity - consumption(kWh)`)) & as.numeric(yeet$phone_ratio) < mean(yeet$phone_ratio)
yeet$Country[as.numeric(yeet$`Electricity - production(kWh)`) - as.numeric(yeet$`Electricity - consumption(kWh)`) > mean(as.numeric(yeet$`Electricity - production(kWh)`) - as.numeric(yeet$`Electricity - consumption(kWh)`)) & as.numeric(yeet$phone_ratio) < mean(yeet$phone_ratio)]
output$ok_mc_poor_iusers <-
yeet$Country[as.numeric(yeet$`Telephones - mobile cellular`) > mean(as.numeric(yeet$`Telephones - mobile cellular`))
& as.numeric(yeet$`Internet users`) < mean(as.numeric(yeet$`Internet users`))]
yeet$Country[as.numeric(yeet$`Telephones - mobile cellular`) > mean(as.numeric(yeet$`Telephones - mobile cellular`))
& as.numeric(yeet$`Internet users`) < mean(as.numeric(yeet$`Internet users`))]
output$ok_mc_poor_iusers <-
yeet$Country[as.numeric(yeet$`Telephones - mobile cellular`) > mean(as.numeric(yeet$`Telephones - mobile cellular`))
& as.numeric(yeet$`Internet users`) < mean(as.numeric(yeet$`Internet users`))]
library(dplyr)
out_list <- function(df) {
output <- list()
output$ok_mc_poor_iusers <-
yeet$Country[as.numeric(yeet$`Telephones - mobile cellular`) > mean(as.numeric(yeet$`Telephones - mobile cellular`))
& as.numeric(yeet$`Internet users`) < mean(as.numeric(yeet$`Internet users`))]
yeet$Country[as.numeric(yeet$`Internet hosts`) - as.numeric(yeet$`Internet hosts`) ==
max(as.numeric(yeet$`Internet users`) - as.numeric(yeet$`Internet users`))]
yeet$Country[as.numeric(yeet$`Internet hosts`) - as.numeric(yeet$`Internet hosts`) ==
max(as.numeric(yeet$`Internet users`) - as.numeric(yeet$`Internet users`))]
output$elec_most_surplus <- yeet$Country[as.numeric(yeet$`Internet hosts`) - as.numeric(yeet$`Internet hosts`) ==
max(as.numeric(yeet$`Internet users`) - as.numeric(yeet$`Internet users`))]
yeet$Country[as.numeric(yeet$`Telephones - mobile cellular`) > mean(as.numeric(yeet$`Telephones - mobile cellular`))
& as.numeric(yeet$`Internet users`) < mean(as.numeric(yeet$`Internet users`))]
yeet$Country[as.numeric(yeet$`Internet hosts`) - as.numeric(yeet$`Internet hosts`) ==
max(as.numeric(yeet$`Internet users`) - as.numeric(yeet$`Internet users`))]
\
yeet$Country[as.numeric(yeet$`Internet hosts`) - as.numeric(yeet$`Internet hosts`) ==
max(as.numeric(yeet$`Internet users`) - as.numeric(yeet$`Internet users`))]
output$elec <- yeet$Country[as.numeric(yeet$`Internet hosts`) - as.numeric(yeet$`Internet hosts`) ==
max(as.numeric(yeet$`Internet users`) - as.numeric(yeet$`Internet users`))]
yeet$Country[as.numeric(yeet$`Internet hosts`) - as.numeric(yeet$`Internet hosts`) ==
max(as.numeric(yeet$`Internet users`) - as.numeric(yeet$`Internet users`))]
yeet$Country[as.numeric(yeet$`Internet users`) - as.numeric(yeet$`Internet hosts`) ==
max(as.numeric(yeet$`Internet users`) - as.numeric(yeet$`Internet hosts`))]
yeet$Country[as.numeric(yeet$`Internet hosts`) - as.numeric(yeet$`Internet users`) ==
max(as.numeric(yeet$`Internet hosts`) - as.numeric(yeet$`Internet users`))]
yeet$Country[as.numeric(yeet$`ele_rank`)
> mean(as.numeric(yeet$`ele_rank`)
& as.numeric(yeet$GDP - real growth rate(%)) > mean(yeet$GDP - real growth rate(%))]
yeet$Country[as.numeric(yeet$`ele_rank`) > mean(as.numeric(yeet$`ele_rank`)
& as.numeric(yeet$`GDP - real growth rate(%)`) > mean(as.numeric(yeet$`GDP - real growth rate(%)`)]
yeet$Country[as.numeric(yeet$`ele_rank`) > mean(as.numeric(yeet$`ele_rank`)
& as.numeric(yeet$`GDP - real growth rate(%)`) > mean(as.numeric(yeet$`GDP - real growth rate(%)`)]
yeet$Country[as.numeric(yeet$`GDP - real growth rate(%)`) > mean(as.numeric(yeet$`GDP - real growth rate(%)`))
& as.numeric(yeet$`ele_rank`) > mean(as.numeric(yeet$`ele_rank`))]
yeet$Country[as.numeric(yeet$`Internet users`)/as.numeric(yeet$`Internet hosts`) == max(as.numeric(yeet$`Internet users`)/as.numeric(yeet$`Internet hosts`))]
yeet$Country[as.numeric(yeet$`Internet users`)/as.numeric(yeet$`Internet hosts`) ==
max(as.numeric(yeet$`Internet users`)/as.numeric(yeet$`Internet hosts`))]
yeet$Country[as.numeric(yeet$`GDP - per captia`) > mean(as.numeric(yeet$`GDP - per captia`))
& as.numeric(yeet$`phone_rank`) > mean(as.numeric(yeet$`phone_rank`))]
yeet$Country[as.numeric(yeet$`GDP - per captia`) > mean(as.numeric(yeet$`GDP - per captia`))
& as.numeric(yeet$`phone_rank`) > mean(as.numeric(yeet$`phone_rank`))]
yeet$Country[as.numeric(yeet$`GDP - per captia`) > mean(as.numeric(yeet$`GDP - per captia`))
& as.numeric(yeet$`phone_rank`) < mean(as.numeric(yeet$`phone_rank`))]
as.numeric(yeet$`GDP - per captia`) > mean(as.numeric(yeet$`GDP - per captia`))
& as.numeric(yeet$`phone_rank`) < mean(as.numeric(yeet$`phone_rank`))
as.numeric(yeet$`GDP - per captia`) > mean(as.numeric(yeet$`GDP - per captia`)) & as.numeric(yeet$`phone_rank`) < mean(as.numeric(yeet$`phone_rank`))
as.numeric(yeet$`GDP - per captia`) > mean(as.numeric(yeet$`GDP - per captia`))
as.numeric(yeet$`GDP - per capita`) > mean(as.numeric(yeet$`GDP - per capita`))
yeet$Country[as.numeric(yeet$`GDP - per capita`) > mean(as.numeric(yeet$`GDP - per capita`))
& as.numeric(yeet$`phone_rank`) < mean(as.numeric(yeet$`phone_rank`))]
yeet$Country[as.numeric(yeet$`sum_rank`) == max(as.numeric(yeet$`sum_rank`))]
yeet$Country[as.numeric(yeet$`sum_rank`) == min(as.numeric(yeet$`sum_rank`))]
yeet$Country[as.numeric(yeet$`net_raio`) == min(as.numeric(yeet$`net_raio`))]
yeet$Country[as.numeric(yeet$`net_raio`) == min(as.numeric(yeet$`net_raio`))]
yeet$Country[as.numeric(yeet$`net_raio`) == max(as.numeric(yeet$`net_raio`))]
yeet$Country[as.numeric(yeet$`net_ratio`) == max(as.numeric(yeet$`net_ratio`))]
yeet$Country[as.numeric(yeet$`GDP - real growth rate(%)`) == max(as.numeric(yeet$`GDP - real growth rate(%)`))]
yeet$Country[as.numeric(yeet$`GDP - per capita`) > mean(as.numeric(yeet$`GDP - per capita`))
& as.numeric(yeet$`sum_rank`) < mean(as.numeric(yeet$`sum_rank`))]
yeet$Country[as.numeric(yeet$`GDP - real growth rate(%)`) > mean(as.numeric(yeet$`GDP - real growth rate(%)`))
& as.numeric(yeet$`sum_rank`) < mean(as.numeric(yeet$`sum_rank`))]
yeet$Country[as.numeric(yeet$`GDP - real growth rate(%)`) > mean(as.numeric(yeet$`GDP - real growth rate(%)`))
& as.numeric(yeet$`sum_rank`) > mean(as.numeric(yeet$`sum_rank`))]
yeet$Country[as.numeric(yeet$`Electricity - production(kWh)`) > mean(as.numeric(yeet$`Electricity - production(kWh)`))
& as.numeric(yeet$`phone_rank`) > mean(as.numeric(yeet$`phone_rank`))]
yeet$Country[as.numeric(yeet$`Electricity - production(kWh)`) < mean(as.numeric(yeet$`Electricity - production(kWh)`))
& as.numeric(yeet$`phone_rank`) > mean(as.numeric(yeet$`phone_rank`))]
yeet$Country[as.numeric(yeet$`Electricity - comsumption(kWh)`) > mean(as.numeric(yeet$`Electricity - comsumption(kWh)`))
& as.numeric(yeet$`phone_rank`) < mean(as.numeric(yeet$`phone_rank`))]
yeet$Country[as.numeric(yeet$`Electricity - consumption(kWh)`) > mean(as.numeric(yeet$`Electricity - consumption(kWh)`))
& as.numeric(yeet$`phone_rank`) < mean(as.numeric(yeet$`phone_rank`))]
shiny::runApp()
runApp()
library(dplyr)
library(data.table)
raw_data <- data.table::fread("countries.csv")
## select only columns we are interested in, and delete all the blank data
## "data" is now data table of 9columns: country, e cons + pro, gdp per cap + growth, internet hosts + users, telephone line + cellular
data <- raw_data %>%
filter(Country != "String") %>%
select(Country, `Electricity - consumption(kWh)`, `Electricity - production(kWh)`, `GDP - per capita`, `GDP - real growth rate(%)`, `Internet hosts`, `Internet users`, `Telephones - main lines in use`, `Telephones - mobile cellular`) %>%
filter(`Electricity - consumption(kWh)` != "") %>%
filter(`Electricity - production(kWh)` != "") %>%
filter(`GDP - per capita` != "") %>%
filter(`GDP - real growth rate(%)` != "") %>%
filter(`Internet hosts` != "") %>%
filter(`Internet users` != "") %>%
filter(`Telephones - main lines in use` != "") %>%
filter(`Telephones - mobile cellular` != "")
## here we rank the countries based on multiple aspects
new_data <- data %>%
mutate(elec_gap = as.numeric(as.character(`Electricity - production(kWh)`))- as.numeric(as.character(`Electricity - consumption(kWh)`))) %>%
arrange(desc(elec_gap)) %>%
mutate(ele_rank = 1:nrow(data)) %>% ## ele_rank: rank from highest [electrivity production - consumption] downwards
mutate(gdp = as.numeric(as.character(`GDP - per capita`)) * as.numeric(as.character(`GDP - real growth rate(%)`))) %>%
arrange(desc(gdp)) %>%
mutate(gdp_rank = 1:nrow(data)) %>% ## gdp_rank: rank from highest gdp per cap * growth rate downwards
mutate(net_ratio = as.numeric(as.character(`Internet hosts`)) / as.numeric(as.character(`Internet users`))) %>%
arrange(desc(net_ratio)) %>%
mutate(net_rank = 1:nrow(data)) %>% ## net_rank: rank from highest internet host per user downwards
mutate(phone_ratio = as.numeric(as.character(`Telephones - mobile cellular`)) / as.numeric(as.character(`Telephones - main lines in use`))) %>%
arrange(phone_ratio) %>%
mutate(phone_rank = 1:nrow(data)) ## phone_rank: rank from lowest cellular phone usage compare to mainline upwards
## this function is what you call in future documents, after sourcing this file.
## calling this will give you 10 rows of data, with first 9 columns same with ^ in data's comments,
## -- but added elec_gap, elec_rank, gdp, gdp_rank, net_ratio, net_rank, phone_ratio and phone_rank.
## they are arranged in the order(from top to bottom) with most possibility of growth to least possibility of growth
get_10_countries <- function(){
result_data <- new_data %>%
mutate(sum_rank = ele_rank + gdp_rank + net_rank + phone_rank) %>%
arrange(sum_rank) %>%
head(10)
result_data
}
yeet <- get_10_countries()
View(yeet)
yeet$Country[as.numeric(yeet$`gdp`) > mean(as.numeric(yeet$`gdp`))
& as.numeric(yeet$`Internet users`) < mean(as.numeric(yeet$`Internet users`))
library(dplyr)
library(data.table)
raw_data <- data.table::fread("countries.csv")
## select only columns we are interested in, and delete all the blank data
## "data" is now data table of 9columns: country, e cons + pro, gdp per cap + growth, internet hosts + users, telephone line + cellular
data <- raw_data %>%
filter(Country != "String") %>%
select(Country, `Electricity - consumption(kWh)`, `Electricity - production(kWh)`, `GDP - per capita`, `GDP - real growth rate(%)`, `Internet hosts`, `Internet users`, `Telephones - main lines in use`, `Telephones - mobile cellular`) %>%
filter(`Electricity - consumption(kWh)` != "") %>%
filter(`Electricity - production(kWh)` != "") %>%
filter(`GDP - per capita` != "") %>%
filter(`GDP - real growth rate(%)` != "") %>%
filter(`Internet hosts` != "") %>%
filter(`Internet users` != "") %>%
filter(`Telephones - main lines in use` != "") %>%
filter(`Telephones - mobile cellular` != "")
## here we rank the countries based on multiple aspects
new_data <- data %>%
mutate(elec_gap = as.numeric(as.character(`Electricity - production(kWh)`))- as.numeric(as.character(`Electricity - consumption(kWh)`))) %>%
arrange(desc(elec_gap)) %>%
mutate(ele_rank = 1:nrow(data)) %>% ## ele_rank: rank from highest [electrivity production - consumption] downwards
mutate(gdp = as.numeric(as.character(`GDP - per capita`)) * as.numeric(as.character(`GDP - real growth rate(%)`))) %>%
arrange(desc(gdp)) %>%
mutate(gdp_rank = 1:nrow(data)) %>% ## gdp_rank: rank from highest gdp per cap * growth rate downwards
mutate(net_ratio = as.numeric(as.character(`Internet hosts`)) / as.numeric(as.character(`Internet users`))) %>%
arrange(desc(net_ratio)) %>%
mutate(net_rank = 1:nrow(data)) %>% ## net_rank: rank from highest internet host per user downwards
mutate(phone_ratio = as.numeric(as.character(`Telephones - mobile cellular`)) / as.numeric(as.character(`Telephones - main lines in use`))) %>%
arrange(phone_ratio) %>%
mutate(phone_rank = 1:nrow(data)) ## phone_rank: rank from lowest cellular phone usage compare to mainline upwards
## this function is what you call in future documents, after sourcing this file.
## calling this will give you 10 rows of data, with first 9 columns same with ^ in data's comments,
## -- but added elec_gap, elec_rank, gdp, gdp_rank, net_ratio, net_rank, phone_ratio and phone_rank.
## they are arranged in the order(from top to bottom) with most possibility of growth to least possibility of growth
get_10_countries <- function(){
result_data <- new_data %>%
mutate(sum_rank = ele_rank + gdp_rank + net_rank + phone_rank) %>%
arrange(sum_rank) %>%
head(10)
result_data
}
#  The yeet equal the filtered date of the 10 counries.
yeet <- get_10_countries()
yeet$Country[as.numeric(yeet$`gdp`) > mean(as.numeric(yeet$`gdp`))
& as.numeric(yeet$`Internet users`) < mean(as.numeric(yeet$`Internet users`))]
yeet$Country[as.numeric(yeet$`gdp_rank`) > mean(as.numeric(yeet$`gdp_rank`))
& as.numeric(yeet$`Internet users`) < mean(as.numeric(yeet$`Internet users`))]
